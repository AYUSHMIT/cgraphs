#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Partial order for deadlock freedom
\end_layout

\begin_layout Title
Jules Jacobs
\end_layout

\begin_layout Standard
We ensure deadlock freedom by putting an order on locks.
 Each thread keeps track of the set of locks it has locked.
 This set can be viewed as a set of locks that the thread is obliged to
 unlock before it terminates.
 To prevent deadlocks we insist that a thread may only lock a lock that
 is strictly lower in the order compared to any of the locks it has locked.
 When we fork a thread we can give a subset of the set of locks to the forked
 off thread.
 The forked off thread must unlock all those locks before it terminates.
 
\end_layout

\begin_layout Standard
This ensures deadlock freedom because the thread that holds the lock 
\begin_inset Formula $l$
\end_inset

 that's lowest in the order can always make progress, because:
\end_layout

\begin_layout Enumerate
It's not blocked on a lock 
\begin_inset Formula $l'\geq l$
\end_inset

, because the thread is not allowed to attempt to lock such locks since
 
\begin_inset Formula $l$
\end_inset

 is in its set and it can only lock locks that are strictly lower than any
 lock in its set
\end_layout

\begin_layout Enumerate
It's not blocked on a lock 
\begin_inset Formula $l'<l$
\end_inset

, because that means that another thread is currently holding 
\begin_inset Formula $l'$
\end_inset

, and 
\begin_inset Formula $l'$
\end_inset

 is lower than 
\begin_inset Formula $l$
\end_inset

, but by assumption the lock 
\begin_inset Formula $l$
\end_inset

 was the lowest lock currently held
\end_layout

\begin_layout Standard
What properties do we require from the order 
\begin_inset Formula $\leq,<$
\end_inset

 to ensure deadlock freedom? We require a notion of lowest lock currently
 held, and this must ensure that there is no 
\begin_inset Formula $l'<l$
\end_inset

 currently held.
 It is therefore enough to prevent cycles 
\begin_inset Formula $l_{1}<l_{2}<\cdots<l_{1}$
\end_inset

.
 We can make this even more general by thinking about operations on the
 set of locks:
\end_layout

\begin_layout Itemize
Notion of 
\begin_inset Formula $l<L$
\end_inset

 where 
\begin_inset Formula $L$
\end_inset

 is the set of locks (possibly plus some other data)
\end_layout

\begin_layout Itemize
Notion of adding and removing a lock from 
\begin_inset Formula $L$
\end_inset

 (possibly plus some other data that descript the manner in which it gets
 added/removed)
\end_layout

\end_body
\end_document
